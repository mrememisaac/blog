//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

namespace EmemIsaac.Blog.BApplication.Services.Base
{
    public partial interface IClient
    {
        string BaseUrl { get; set; }

        bool ReadResponseAsString { get; set; }

        HttpClient HttpClient { get; }

        Task<CreateArticleCommandResponse> CreateArticleAsync(CreateArticleCommand body);
        Task<CreateArticleCommandResponse> CreateArticleAsync(CreateArticleCommand body, CancellationToken cancellationToken);
        Task<CreateCategoryCommandResponse> CreateCategoryAsync(CreateCategoryCommand body);
        Task<CreateCategoryCommandResponse> CreateCategoryAsync(CreateCategoryCommand body, CancellationToken cancellationToken);
        Task DeleteArticleAsync(Guid? id);
        Task DeleteArticleAsync(Guid? id, CancellationToken cancellationToken);
        Task DeleteCategoryAsync(Guid? id);
        Task DeleteCategoryAsync(Guid? id, CancellationToken cancellationToken);
        Task<ICollection<ListArticlesQueryResponse>> GetAllArticlesAsync();
        Task<ICollection<ListArticlesQueryResponse>> GetAllArticlesAsync(CancellationToken cancellationToken);
        Task<ICollection<GetCategoryModel>> GetAllCategoriesAsync();
        Task<ICollection<GetCategoryModel>> GetAllCategoriesAsync(CancellationToken cancellationToken);
        Task<GetArticleQueryResponse> GetArticleByIdAsync(Guid? id);
        Task<GetArticleQueryResponse> GetArticleByIdAsync(Guid? id, CancellationToken cancellationToken);
        Task<GetArticleQueryResponse> GetArticleByUrlAsync(string url);
        Task<GetArticleQueryResponse> GetArticleByUrlAsync(string url, CancellationToken cancellationToken);
        Task<ICollection<GetCategoriesWithArticlesQueryResponse>> GetCategoriesWithArticlesAsync();
        Task<ICollection<GetCategoriesWithArticlesQueryResponse>> GetCategoriesWithArticlesAsync(CancellationToken cancellationToken);
        Task<GetCategoryModel> GetCategoryAsync(GetCategoryQuery body);
        Task<GetCategoryModel> GetCategoryAsync(GetCategoryQuery body, CancellationToken cancellationToken);
        Task UpdateArticleAsync(UpdateArticleCommand body);
        Task UpdateArticleAsync(UpdateArticleCommand body, CancellationToken cancellationToken);
        Task UpdateCategoryAsync(UpdateCategoryCommand body);
        Task UpdateCategoryAsync(UpdateCategoryCommand body, CancellationToken cancellationToken);
    }
}